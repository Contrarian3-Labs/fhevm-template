/**
 * This file is autogenerated by helper.
 * You should not edit it manually or your changes might be overwritten.
 */

export const deployedContracts = {
  31337: {
    FHECounter: {
      address: "0x5FbDB2315678afecb367f032d93F642f64180aa3",
      abi: [
        {
          inputs: [
            {
              internalType: "externalEuint32",
              name: "inputEuint32",
              type: "bytes32",
            },
            {
              internalType: "bytes",
              name: "inputProof",
              type: "bytes",
            },
          ],
          name: "decrement",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "getCount",
          outputs: [
            {
              internalType: "euint32",
              name: "",
              type: "bytes32",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "externalEuint32",
              name: "inputEuint32",
              type: "bytes32",
            },
            {
              internalType: "bytes",
              name: "inputProof",
              type: "bytes",
            },
          ],
          name: "increment",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "protocolId",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "pure",
          type: "function",
        },
      ],
      inheritedFunctions: {},
      deployedOnBlock: 3,
    },
  },
} as const;

export type DeployedContracts = typeof deployedContracts;

// Helper to get contract for a specific chain
export function getContract(chainId: number, contractName: string) {
  const chain = deployedContracts[chainId as keyof typeof deployedContracts];
  if (!chain) {
    throw new Error(`No contracts deployed on chain ${chainId}`);
  }
  const contract = chain[contractName as keyof typeof chain];
  if (!contract) {
    throw new Error(`Contract ${contractName} not found on chain ${chainId}`);
  }
  return contract;
}
